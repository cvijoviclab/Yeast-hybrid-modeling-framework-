function [fermentationDataset1,respirationDataset1,rellativeAbundance, enzUsageSimulated, pUD_1Simulated, geneExprG0, geneExprG1]=loadData()


%% Import data FERMENTATION
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/linoste/Documents/GitHub/Crabtree/proteomics/fermentationDataset1.xlsx
%    Worksheet: Sheet1
%
% Auto-generated by MATLAB on 14-May-2020 13:36:09
% Setup the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 5);

% Specify sheet and range
opts.Sheet = "Sheet1";
opts.DataRange = "A1:E5005";

% Specify column names and types
opts.VariableNames = ["ProteinId", "GeneSymbol", "Var3", "Var4", "glucose"];
opts.SelectedVariableNames = ["ProteinId", "GeneSymbol", "glucose"];
opts.VariableTypes = ["string", "string", "char", "char", "double"];

% Specify variable properties
opts = setvaropts(opts, ["ProteinId", "GeneSymbol", "Var3", "Var4"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["ProteinId", "GeneSymbol", "Var3", "Var4"], "EmptyFieldRule", "auto");

% Import the data
fermentationDataset1 = readtable("/Users/linoste/Documents/GitHub/Crabtree/proteomics/fermentationDataset1.xlsx", opts, "UseExcel", false);
% Clear temporary variables
clear opts
%% Import data from RESPIRATION
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/linoste/Documents/GitHub/Crabtree/proteomics/respirationDataset2.xlsx
%    Worksheet: SI_Table3
%
% Auto-generated by MATLAB on 15-May-2020 16:58:22
% Setup the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 2);

% Specify sheet and range
opts.Sheet = "SI_Table3";
opts.DataRange = "A1:B2145";

% Specify column names and types
opts.VariableNames = ["GeneID", "REF"];
opts.VariableTypes = ["string", "double"];

% Specify variable properties
opts = setvaropts(opts, "GeneID", "WhitespaceRule", "preserve");
opts = setvaropts(opts, "GeneID", "EmptyFieldRule", "auto");

% Import the data
respirationDataset1 = readtable("/Users/linoste/Documents/GitHub/Crabtree/proteomics/respirationDataset2.xlsx", opts, "UseExcel", false);
% Clear temporary variables
clear opts

%% Import data from RELLATIVE ABUNDANCE
% Script for importing data from the following text file:
%
%    filename: /Users/linoste/Documents/GitHub/Crabtree/proteomics/rellativeAbundance.txt
%
% Auto-generated by MATLAB on 15-May-2020 22:48:04
% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 3);

% Specify range and delimiter
opts.DataLines = [13, Inf];
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["internal_id", "string_external_id", "abundance"];
opts.VariableTypes = ["double", "string", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "string_external_id", "WhitespaceRule", "preserve");
opts = setvaropts(opts, "string_external_id", "EmptyFieldRule", "auto");

% Import the data
rellativeAbundance = readtable("/Users/linoste/Documents/GitHub/Crabtree/proteomics/rellativeAbundance.txt", opts);
% Clear temporary variables
clear opts


%% Load data from simulation 
% loading regulation applied by Boolean
load('/Users/linoste/Documents/GitHub/Crabtree/Code/Multiscale_Linnea/data/GeneExprG0.mat');
geneExprG0 = GeneExpr;

load('/Users/linoste/Documents/GitHub/Crabtree/Code/Multiscale_Linnea/data/GeneExprG1.mat');
geneExprG1 = GeneExpr;

% Loading enzyme usages unconstrained
path2Sim='/Users/linoste/Documents/GitHub/Crabtree/Code/Multiscale_Linnea/regulationSensitivityAnalyzis/results/regulationAnalysis20200525/';
path2Sim2='/Users/linoste/Documents/GitHub/Crabtree/Code/Multiscale_Linnea/results/multiscale20200506nr2/';
foldername=geneExprG1.enzGenes(geneExprG0.rank~=0 | geneExprG1.rank~=0 );
filename='enzUsages_reducedYeast.txt';

enzUsageSimulated=cell(1,length(foldername)+1);

for i=1:length(foldername)
    enzUsageSimulated{i}=readtable([path2Sim char(foldername(i)) '/' filename]);
end
enzUsageSimulated{i+1}=readtable([path2Sim2 filename]);

filename='enzUsage_VarAnalysis_D_1.txt';
pUD_1Simulated=cell(1,length(foldername)+1);
for i=1:length(foldername)
    pUD_1Simulated{i}=readtable([path2Sim char(foldername(i)) '/' filename]);
end
pUD_1Simulated{i+1}=readtable([path2Sim2 filename]);


